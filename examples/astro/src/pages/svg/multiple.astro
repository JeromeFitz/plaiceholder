---
import { cx } from "class-variance-authority";
import { getPlaiceholder } from "plaiceholder";
import { imageList, imageListItem } from "@plaiceholder/ui";
import { config } from "@/config";
import Layout from "@/layouts/Layout.astro";
import { getAllPublicUnsplashImagePaths } from "@/lib/images";

const title = config.examples.pages.svg.title;
const heading = config.examples.variants.multiple.title;

const imagePaths = await getAllPublicUnsplashImagePaths();

const images = await Promise.all(
  imagePaths.map(async (src) => {
    const { img, svg } = await getPlaiceholder(src);

    return {
      img: {
        ...img,
        alt: "Paint Splashes",
        title: "Photo from Unsplash",
      },
      svg,
    };
  })
);
---

<Layout variant="example" title={title} heading={heading}>
  <ul role="list" class={imageList({ columns: 3, aspect: "5/7" })}>
    {
      images.map(({ img, svg }) => {
        const [Svg, svgProps, svgChildren] = svg;

        return (
          <li class={imageListItem()}>
            <Svg
              {...svgProps}
              style={{
                ...svgProps.style,
                transform: ["scale(1.5)", svgProps.style.transform].join(" "),
                filter: "blur(40px)",
              }}
              class={cx("absolute", "inset-0", "w-full", "h-full", "z-[-1]")}
            >
              {svgChildren.map((child) => {
                const [Path, pathProps] = child;

                return <Path {...pathProps} />;
              })}
            </Svg>
            {/**
             * It's a little fiddly globbing over directories with the `Image`
             * component, so we'll use a regular ol' `<img>` instead:
             */}
            <img {...img} loading="lazy" />
          </li>
        );
      })
    }
  </ul>
</Layout>
